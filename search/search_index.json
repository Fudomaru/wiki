{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Building a Wiki","text":""},{"location":"#how-i-built-my-wiki-using-mkdocs","title":"How I Built My Wiki Using MkDocs","text":""},{"location":"#1-installing-python","title":"1. Installing Python","text":"<ul> <li> <p>First things first: Checking if Python is already installed. For that I just checked for the Version using <code>py --version</code> or <code>python --version</code></p> </li> <li> <p>Since for me it wasn't installed, I went on installing it. I used <code>winget install --id Python.Python.3 --source winget</code> to install it over Powershell, which seamed the most strait forward way to do it. </p> </li> <li> <p>Then I got to my first bump in the road: <code>py --version</code> worked, but <code>python --version</code> did not. For that I wanted to figure out what the actual difference is</p> </li> </ul> <p>Difference py and python command</p> <ul> <li>With that in mind, I figured out that I had to disable the Microsoft Store shortcut, which lets <code>python</code> point to the install in the MS Store. I found it under <code>Settings&gt;Apps&gt;App execution aliases</code></li> </ul>"},{"location":"#py-is-the-launcher-python-is-the-interpreter","title":"<code>py</code> is the launcher. <code>python</code> is the interpreter.","text":"<ul> <li> <p><code>py</code> is a small helper program that comes with the official Python installation on Windows. Its only job is to find and launch the correct version of Python installed on your system.  </p> </li> <li> <p><code>python</code> is the actual executable \u2014 the real Python interpreter. When you type <code>python</code>, you're telling your system, \"Run this specific program.\"</p> </li> </ul>"},{"location":"#why-does-this-matter","title":"Why does this matter?","text":"<p>Because <code>py</code> will usually work, even if your system PATH isn\u2019t set up right. - <code>python</code> might be broken or hijacked by the Microsoft Store\u2019s fake shortcut \u2014 leading to frustration and confusion.</p> <p>Bottom line:</p> <ul> <li>Use <code>py</code> when your system is fresh and you\u2019re still figuring things out.</li> <li>But for full control and compatibility (especially with scripts, tools, and virtual environments), make sure <code>python</code> points to your real install \u2014 and then use <code>python</code> from that point forward.</li> </ul> <p>If <code>py</code> is the butler, <code>python</code> is the king. Eventually, you don\u2019t want to talk to the butler anymore.</p>"},{"location":"#2-installed-mkdocs","title":"2. Installed MkDocs","text":"<ul> <li><code>pip install mkdocs</code></li> <li>Ran <code>mkdocs new .</code> inside my project folder</li> </ul>"},{"location":"#3-git-github-setup","title":"3. Git &amp; GitHub Setup","text":"<ul> <li>Installed Git with winget</li> <li>Set up username + email</li> <li>Created GitHub repo and pushed source</li> <li>Deployed using <code>mkdocs gh-deploy</code></li> </ul>"},{"location":"#4-lessons-learned","title":"4. Lessons Learned","text":"<ul> <li>Don't trust Windows defaults</li> <li>GitHub Pages uses <code>gh-pages</code>, not <code>main</code></li> <li>Always check your branches and remotes</li> </ul>"},{"location":"#5-whats-next","title":"5. What's Next","text":"<ul> <li>Theme upgrade</li> <li>First real knowledge sections</li> </ul>"}]}